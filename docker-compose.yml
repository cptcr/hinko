# docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: hinko
      POSTGRES_USER: hinko
      POSTGRES_PASSWORD: hinko_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hinko"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  hinko-bot:
    build: .
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://hinko:hinko_password@postgres:5432/hinko?sslmode=disable
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_ID=${DISCORD_ID}
      - GEIZHALS_USERNAME=${GEIZHALS_USERNAME}
      - GEIZHALS_API_KEY=${GEIZHALS_API_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - ADMIN_USER_ID=${ADMIN_USER_ID}
    ports:
      - "3000:3000"
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: